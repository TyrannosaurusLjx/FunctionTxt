
####################################################



`plt.scatter()`：创建散点图。
`plt.bar()`：创建柱状图。
`plt.hist()`：创建直方图。
`plt.pie()`：创建饼图。
`plt.boxplot()`：创建箱线图。
`plt.imshow()`：显示图像。
除了绘制图形，`matplotlib.pyplot`还提供了一些函数来自定义图形的样式、添加标签、设置坐标轴等。以下是一些常见的自定义函数：

`plt.xlabel()`：设置x轴标签。
`plt.ylabel()`：设置y轴标签。
`plt.title()`：设置图形标题。
`plt.legend()`：添加图例。
`plt.grid()`：显示网格线。
`plt.xlim()`：设置x轴范围。
`plt.ylim()`：设置y轴范围。


调整图形大小和分辨率：可以使用`plt.figure()`函数来设置图形的大小和分辨率。例如，可以使用`plt.figure(figsize=(width, height), dpi=dpi)`来设置图形的宽度、高度和分辨率。

添加标题和标签：使用`plt.title()`函数来添加图形的标题，使用`plt.xlabel()`和`plt.ylabel()`函数来添加x轴和y轴的标签。

改变线条样式：可以使用`plt.plot()`函数的`linestyle`参数来改变线条的样式。常见的线条样式包括实线（`'-'`）、虚线（`'--'`）、点线（`':'`）和点划线（`'-.'`）等。

自定义颜色：使用`plt.plot()`函数的`color`参数来指定线条的颜色。可以使用颜色名称（如`'red'`、`'blue'`）或颜色的十六进制码（如`'#FF0000'`、`'#0000FF'`）。

添加图例：使用`plt.legend()`函数来添加图例，说明每条线对应的含义。可以在`plt.plot()`函数中的`label`参数中指定每条线的标签，然后调用`plt.legend()`函数来显示图例。

设置网格线：使用`plt.grid()`函数来显示网格线，可以通过设置`plt.grid(True)`来显示网格线，或者使用`plt.grid(False)`来隐藏网格线。

调整坐标轴范围：可以使用`plt.xlim()`和`plt.ylim()`函数来调整x轴和y轴的显示范围。

保存图形：使用`plt.savefig()`函数可以将图形保存为文件。可以指定文件名以及文件格式（如PNG、JPEG、PDF等）。


####################################################


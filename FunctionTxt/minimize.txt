####################################################

>>> from scipy.optimize import minimize
>>> def f(x):
...     return x**2 - 9
... result = minimize(f,x0=1)

>>> type(result)
<class 'scipy.optimize._optimize.OptimizeResult'>
>>> result
  message: Optimization terminated successfully.
  success: True
   status: 0
      fun: -9.0
        x: [-9.442e-09]
      nit: 2
      jac: [ 0.000e+00]
 hess_inv: [[ 5.000e-01]]
     nfev: 6
     njev: 3
>>> result.fun
-9.0
>>> result.x
array([-9.44232006e-09])

###
for example : 
    
    floor_value = math.floor(minimize(f, f((a+b)/2), bounds=[(a,b)]).fun)# 求下界
    ceiling_value = - math.floor(minimize(lambda x:-f(x), f((a+b)/2),bounds=[(a,b)]).fun)# 求上界
    
    bounds = [(,),(,)]# 自变量取值范围
###


you can type help(minimize) to get help
>>>help(minimize)
>>>
Help on function minimize in module scipy.optimize._minimize:

minimize(fun, x0, args=(), method=None, jac=None, hess=None, hessp=None, bounds=None, constraints=(), tol=None, callback=None, options=None)
    Minimization of scalar function of one or more variables.
>>>

####################################################

